{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Form","getWeather","searchHandler","search","onSubmit","type","value","onChange","placeholder","Weather","props","error","city","country","temperature","icon","description","minTemp","maxTemp","humidity","Math","round","src","alt","App","useState","setSearch","weather","setWeather","url","e","a","preventDefault","fetch","response","json","data","name","sys","main","temp","temp_min","temp_max","cod","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c41a95e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  const dateBuilder = (d) => {\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n    const day = days[d.getDay()];\r\n    const date = d.getDate();\r\n    const month = months[d.getMonth()];\r\n    const year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Weather App</h1>\r\n      <div className=\"date\">\r\n        <p>{dateBuilder(new Date())}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({ getWeather, searchHandler, search }) => {\r\n  return (\r\n    <form className=\"search-box\" onSubmit={getWeather}>\r\n      <input \r\n        type=\"text\"\r\n        className=\"search-bar\"\r\n        value={search}\r\n        onChange={searchHandler} \r\n        placeholder=\"Enter city name...\" />\r\n      <button className=\"search-btn\" type=\"submit\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = (props) => {\r\n  const { error, city, country, temperature, icon, description, minTemp, maxTemp, humidity } = props;\r\n  \r\n  return (\r\n    <>\r\n      {error ?\r\n      <div className=\"error\">\r\n        {error}\r\n      </div> : null \r\n      }\r\n\r\n      <div className=\"location-box\">\r\n        <div className=\"location\">\r\n          { city && country && <p>{city}, {country}</p> }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"weather-box\">\r\n        {temperature ? \r\n          <div className=\"temperature\">\r\n            { <p>{Math.round(temperature)}&deg;C</p> }\r\n          </div> : null\r\n        }\r\n        <div className=\"weather-icon\">\r\n          { icon && <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\" /> }\r\n        </div>\r\n        <div className=\"weather-description\">\r\n          { description && <p>{description}</p> }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"additional-info\">\r\n        { minTemp && <p>Min temp: {Math.round(minTemp)}&deg;C</p> }\r\n        { maxTemp && <p>Max temp: {Math.round(maxTemp)}&deg;C</p> }\r\n        { humidity && <p>Humidity: {humidity}%</p> }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState } from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Weather from './components/Weather/Weather';\nimport './App.css';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const API_KEY = '9f51cf51d9fdb252706691f56459f2cd';\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${API_KEY}`;\n\n  const getWeather = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(url);\n    const data = await response.json();\n    // console.log(data);\n\n    if (data.name) {\n      setWeather({\n        data: data,\n        city: data.name,\n        country: data.sys.country,\n        description: data.weather[0].description,\n        temperature: data.main.temp,\n        minTemp: data.main.temp_min,\n        maxTemp: data.main.temp_max,\n        humidity: data.main.humidity,\n        icon: data.weather[0].icon,\n        cod: '',\n        error: ''\n      });\n    } else if (data.cod === '404') {\n      setWeather({...data, error: 'City not found'});\n    } else {\n      setWeather({...data, error: 'Please enter a city name'});\n    }\n\n    setSearch('');\n  };\n\n  const searchHandler = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form getWeather={getWeather} searchHandler={searchHandler} search={search} />\n      <Weather {...weather} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}